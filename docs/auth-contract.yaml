openapi: 3.0.3
info:
  title: Authentication API
  description: API for user authentication including signup and login.
  version: 1.0.0
servers:
  - url: http://localhost:3000/api/v1
    description: Local development server
paths:
  /auth/signup:
    post:
      summary: User signup
      description: Register a new user in the system.
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignupInput"
      responses:
        "201":
          description: User registered successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Validation error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal server error.
  /auth/login:
    post:
      summary: User login
      description: Authenticate a user and return a JWT token.
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginInput"
      responses:
        "200":
          description: User authenticated successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoginResponse"
        "400":
          description: Validation error or invalid credentials.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal server error.
components:
  schemas:
    SignupInput:
      type: object
      required:
        - first_name
        - last_name
        - email
        - password
        - semester
      properties:
        first_name:
          type: string
          description: First name of the user.
          example: John
        last_name:
          type: string
          description: Last name of the user.
          example: Doe
        email:
          type: string
          description: Email address of the user.
          example: john.doe@example.com
        password:
          type: string
          description: Password for the user account.
          example: Password123!
        semester:
          type: integer
          description: Current semester of the user (1-10).
          example: 5
    LoginInput:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          description: Email address of the user.
          example: john.doe@example.com
        password:
          type: string
          description: Password for the user account.
          example: Password123!
    User:
      type: object
      properties:
        user_id:
          type: string
          description: Unique identifier for the user.
          example: "123e4567-e89b-12d3-a456-426614174000"
        first_name:
          type: string
          description: First name of the user.
          example: John
        last_name:
          type: string
          description: Last name of the user.
          example: Doe
        email:
          type: string
          description: Email address of the user.
          example: john.doe@example.com
        semester:
          type: integer
          description: Current semester of the user.
          example: 5
        role_id:
          type: string
          description: Role ID assigned to the user.
          example: "role123"
    LoginResponse:
      type: object
      properties:
        token:
          type: string
          description: JWT token for the authenticated user.
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        user:
          $ref: "#/components/schemas/User"
    ErrorResponse:
      type: object
      properties:
        errors:
          type: array
          items:
            type: string
          description: List of error messages.
          example: ["Email is already in use", "Password is too weak"]
